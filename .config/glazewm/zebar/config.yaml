global:
  enable_devtools: true

window/bar:
  providers: ["self"]
  width: 5120
  height: "60" #This one is a bit funky, if you are using scaling, adjust accordingly
  position_x: "{{ self.args.MONITOR_X }}"
  position_y: "{{ self.args.MONITOR_Y }}"
  z_order: "always_on_bottom"
  show_in_taskbar: false
  resizable: false
  global_styles: |
    @import "https://www.nerdfonts.com/assets/css/webfont.css";
    @import "https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@latest/dist/tabler-icons.min.css";

    :root {
      --rp-base: #191724;
      --rp-base-alpha-bg: #191724dd;
      --rp-text: #aa8887;
      --rp-love: #ae5e4b;
      --rp-gold: #aa4813;
      --rp-rose: #2583aa;
      --rp-pine: #648aaa;
      --rp-foam: #9a93ae;
      --rp-iris: #c7c6c5;

      --text: var(--rp-text);
      --bg: var(--rp-base-alpha-bg);
      --border: var(--rp-base);
      --icon: var(--rp-love);
      --memory: var(--rp-iris);
      --cpu: var(--rp-rose);
      --cpu-high-usage: var(--rp-love);
      --battery-good: var(--rp-foam);
      --battery-mid: var(--rp-gold);
      --battery-low: var(--rp-love);
      --ws-1: var(--rp-love);
      --ws-2: var(--rp-gold);
      --ws-3: var(--rp-rose);
      --ws-4: var(--rp-pine);
      --ws-5: var(--rp-foam);
      --ws-6: var(--rp-iris);
      --weather: var(--rp-gold);
    }

    @keyframes flash {
        from { opacity: 1.0; }
        50% { opacity: 0.5; }
        to { opacity: 1.0; }
    }

  styles: |
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    align-items: center;
    height: 40px;
    margin: 10px 20px;
    color: var(--text);
    font-family: "JetBrainsMono NF", ui-monospace, monospace;
    font-size: 16px;
    font-weight: 600;

  group/left:
    styles: |
      display: flex;
      align-items: center;
      justify-content: space-between;
      background: var(--bg);
      border: 1px solid var(--border);
      border-radius: 9999px;
      height: 40px; 
      width: fit-content;

      .template {
        margin: 4px;
        display: flex;
        align-items: center;

        div {
          display: flex;
          align-items: center;
        }
      }

      #memory, #cpu, #battery {
        background: color-mix(in srgb, currentColor 10%, transparent);
        border-radius: 9999px;
        padding: 6px;
        i {
          font-size: 20px;
          margin-right: 7px;
        }
      }

    template/rose-pine:
      styles: |
        color: var(--icon);
        background: color-mix(in srgb, currentColor 10%, transparent);
        padding: 6px;
        border-radius: 9999px
      template: |
        <i class="nf nf-md-flower_tulip"></i>

    template/memory:
      providers: ["memory"]
      styles: |
        color: var(--memory);
      template: |
        <i class="ti ti-rocket"></i>
        {{ (memory.usedMemory / 1000000000).toFixed(2) }} GiB

    template/cpu:
      providers: ["cpu"]
      styles: |
        color: var(--cpu);

        .high-usage {
          color: var(--cpu-high-usage);
          animation: flash 0.5s infinite;
        }
      template: |
        <div class={{cpu.usage > 85 ? "high-usage" : ""}}>
          <i class="ti ti-cpu"></i>
          <span>{{ Math.round(cpu.usage) }}%</span>
        </div>

    template/battery:
      providers: ["battery"]
      styles: |
        .critical {
          color: var(--battery-low);
          animation: flash 1s infinite;
        }

        .low {
          color: var(--battery-low)
        }

        .mid {
          color: var(--battery-mid)
        }

        .good {
          color: var(--battery-good);
        }
      template: |
        <div class="
            @switch (true) {
              @case (battery.chargePercent > 75) { good }
              @case (battery.chargePercent > 50) { mid }
              @case (battery.chargePercent > 25) { low }
              @default { critical }
            }
          ">
            <i class="ti ti-bolt"></i>
            {{ Math.round(battery.chargePercent) }}%
        </div>

  group/center:
    styles: |
      justify-self: center;

    template/glazewm:
      styles: |
        height: 40px;
        display: flex;
        align-items: center;
        background: var(--bg);
        border: 1px solid var(--border);
        border-radius: 9999px;
        font-weight: 1000;

        .workspace {
          background:transparent;
          border: none;
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 4px;
        }

        i {
          padding: 8px;
          background: color-mix(in srgb, currentColor 10%, transparent);
          border-radius: 9999px;
        }      

        button:nth-child(6n+1) i {
          color: var(--ws-1);
        }

        button:nth-child(6n+2) i {
          color: var(--ws-2);
        }

        button:nth-child(6n+3) i {
          color: var(--ws-3);
        }

        button:nth-child(6n+4) i {
          color: var(--ws-4);
        }

        button:nth-child(6n+5) i {
          color: var(--ws-5);
        }

        button:nth-child(6n+6) i {
          color: var(--ws-6);
        }

      providers: ["glazewm"]
      events:
        - type: "click"
          fn_path: "script.js#focusWorkspace"
          selector: ".workspace"
      template: |
        @for (workspace of glazewm.currentWorkspaces) {
          <button class="workspace" id="{{ workspace.name }}">
            <i class="nf {{ workspace.hasFocus? 'nf-cod-circle_filled' : 'nf-cod-circle' }}"></i>
          </button>
        }

  group/right:
    styles: |
      justify-self: end;
      height: 40px;
      display: flex;
      align-items: center;
      background: var(--bg);
      border: 1px solid var(--border);
      border-radius: 9999px;

      .template {
        margin: 4px;
        display: flex;
        align-items: center;
      }

      #weather {
        background: color-mix(in srgb, currentColor 10%, transparent);
        border-radius: 9999px;
        padding: 6px;
        i {
          margin-right: 7px;
        }
      }

    template/weather:
      providers: ["weather"]
      styles: |
        margin: 10px;
        i {
          font-size: 20px;
        }
        color: var(--weather);
      template: |
        @switch (weather.status) {
          @case ('clear_day') {<i class="nf nf-weather-day_sunny"></i>}
          @case ('clear_night') {<i class="nf nf-weather-night_clear"></i>}
          @case ('cloudy_day') {<i class="nf nf-weather-day_cloudy"></i>}
          @case ('cloudy_night') {<i class="nf nf-weather-night_alt_cloudy"></i>}
          @case ('light_rain_day') {<i class="nf nf-weather-day_sprinkle"></i>}
          @case ('light_rain_night') {<i class="nf nf-weather-night_alt_sprinkle"></i>}
          @case ('heavy_rain_day') {<i class="nf nf-weather-day_rain"></i>}
          @case ('heavy_rain_night') {<i class="nf nf-weather-night_alt_rain"></i>}
          @case ('snow_day') {<i class="nf nf-weather-day_snow"></i>}
          @case ('snow_night') {<i class="nf nf-weather-night_alt_snow"></i>}
          @case ('thunder_day') {<i class="nf nf-weather-day_lightning"></i>}
          @case ('thunder_night') {<i class="nf nf-weather-night_alt_lightning"></i>}
        }
        {{ weather.celsiusTemp }}Â°

    template/separator:
      styles: |
      template: |
        <i class="nf nf-oct-dot_fill"></>

    template/clock:
      providers: ["date"]
      styles: |
        padding-right: 6px;
      template: |
        {{ date.toFormat(date.now, 't') }}